name: Publish Notion website to GitHub Pages

on:
  # This workflow will only run when you manually trigger it from the GitHub Actions tab.
  workflow_dispatch:

permissions:
  # This grants the workflow permission to write to your repository, which is essential for updating GitHub Pages.
  contents: write

jobs:
  deploy:
    # The job will run on the latest Ubuntu environment provided by GitHub Actions.
    runs-on: ubuntu-latest
    steps:
      # --- NEW STEP: Explicitly set up Python 3.10 ---
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Using a specific Python version for better consistency and compatibility

      # Step 1: Checkout the 'leoncvlt/loconotion' repository.
      - name: Checkout loconotion
        uses: actions/checkout@v3
        with:
          repository: leoncvlt/loconotion
          path: loconotion

      # Step 2: Checkout your own 'ravelforguitar' repository.
      - name: Checkout this repo
        uses: actions/checkout@v3
        with:
          path: pages_repo

      # Step 3: Install all necessary Python dependencies for Loconotion.
      # This step is the most critical for resolving the 'ModuleNotFoundError'.
      - name: Install Loconotion dependencies
        run: |
          # Upgrade pip (Python's package installer) to its latest version first.
          python3 -m pip install --upgrade pip

          # Install ALL known direct and indirect dependencies of Loconotion.
          # We're specifically pinning problematic libraries (urllib3, requests, selenium)
          # to versions known to be compatible with each other and Python 3.10,
          # and using --no-cache-dir and --force-reinstall for a clean state.
          pip install --no-cache-dir --force-reinstall \
            beautifulsoup4 \
            toml \
            selenium==4.10.0 \
            requests==2.28.1 \
            urllib3==1.26.18 \
            chromedriver_autoinstaller==0.6.4 \
            cssutils==1.0.2 \
            html5lib==1.1 \
            webencodings==0.5.1 \
            soupsieve==2.3.1 # Added more common ones from Loconotion's typical dependencies

          # After installing our explicitly pinned versions, install any remaining
          # dependencies that Loconotion's own requirements.txt might list.
          # '--no-deps' ensures it doesn't re-pull dependencies that we've already
          # specifically installed, avoiding conflicts.
          # '|| true' prevents the workflow from failing if there are minor conflicts
          # or already-satisfied requirements.
          pip install --no-deps -r loconotion/requirements.txt || true

      # Step 4: Run the Loconotion script to generate your static website.
      - name: Run Loconotion
        run: |
          # This command and path are crucial and have been retained as they seem to be
          # the intended way to execute Loconotion from its checked-out directory.
          python3 loconotion/loconotion --chromedriver chromedriver "pages_repo/site.toml"
        # The 'working-directory' is set to the root of the runner's workspace,
        # so 'loconotion/loconotion' can be resolved correctly relative to it.
        working-directory: ${{ github.workspace }}

      # Step 5: Push the newly generated static website files to your 'gh-pages' branch.
      - name: Push to GitHub pages
        run: |
          # Configure Git user details for the commit that will be made on the 'gh-pages' branch.
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Execute the 'deploy.sh' script (provided by the Loconotion template).
          # It handles pushing the 'dist' folder to 'gh-pages'.
          GIT_DEPLOY_DIR=dist \
          GIT_DEPLOY_BRANCH=gh-pages \
          GIT_DEPLOY_REPO="https://${{ github.token }}@github.com/${{ github.repository }}.git" ../loconotion/deploy.sh
        # This step's 'working-directory' is 'pages_repo' because that's where the 'dist' folder is.
        working-directory: pages_repo
